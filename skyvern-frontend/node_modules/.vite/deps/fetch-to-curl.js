import {
  __commonJS
} from "./chunk-WOOG5QLI.js";

// node_modules/fetch-to-curl/lib/bundle.js
var require_bundle = __commonJS({
  "node_modules/fetch-to-curl/lib/bundle.js"(exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    var e = (e2) => {
      const t2 = e2.method;
      return t2 && { GET: " -X GET", POST: " -X POST", PUT: " -X PUT", PATCH: " -X PATCH", DELETE: " -X DELETE", HEAD: " -X HEAD", OPTIONS: " -X OPTIONS" }[t2.toUpperCase()] || "";
    };
    var t = (e2) => "function" == typeof Headers && e2 instanceof Headers;
    var o = (e2, t2) => ` -H "${e2}: ${`${t2}`.replace(/(\\|")/g, "\\$1")}"`;
    var r = (e2 = {}) => {
      const { headers: r2 } = e2;
      let n2 = false, s2 = "";
      return t(r2) ? r2.forEach((e3, t2) => {
        "content-length" !== t2.toLocaleLowerCase() && (s2 += o(t2, e3)), "accept-encoding" === t2.toLocaleLowerCase() && (n2 = true);
      }) : r2 && Object.keys(r2).map((e3) => {
        "content-length" !== e3.toLocaleLowerCase() && (s2 += o(e3, r2[e3])), "accept-encoding" === e3.toLocaleLowerCase() && (n2 = true);
      }), { params: s2, isEncode: n2 };
    };
    function n(e2) {
      return "string" == typeof e2 ? e2.replace(/'/g, "'\\''") : e2;
    }
    function s(e2) {
      return e2 ? "object" == typeof e2 ? ` --data-binary '${n(JSON.stringify(e2))}'` : ` --data-binary '${n(e2)}'` : "";
    }
    function a(e2) {
      return e2 ? " --compressed" : "";
    }
    var c = (t2, o2) => {
      let n2, c2;
      "string" == typeof t2 || t2 instanceof URL ? (n2 = t2, c2 = o2 || {}) : (n2 = (t2 || {}).url, c2 = t2 || {});
      const { body: p } = c2, d = r(c2);
      return `curl '${n2}'${e(c2)}${d.params || ""}${s(p)}${a(d.isEncode)}`;
    };
    exports.default = c, exports.escapeBody = n, exports.fetchToCurl = c, exports.generateBody = s, exports.generateCompress = a, exports.generateHeader = r, exports.generateMethod = e, exports.isInstanceOfHeaders = t;
  }
});
export default require_bundle();
//# sourceMappingURL=fetch-to-curl.js.map
